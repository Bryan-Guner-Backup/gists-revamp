==> Build Environment
CC: /usr/bin/cc => /usr/bin/gcc-4.2
CXX: /usr/bin/c++ => /usr/bin/c++-4.2
LD: /usr/bin/cc => /usr/bin/gcc-4.2
CFLAGS: -O3 -w -pipe
CXXFLAGS: -O3 -w -pipe
CPPFLAGS: -I/usr/local/Cellar/readline/6.1/include
LDFLAGS: -L/usr/local/Cellar/readline/6.1/lib
MAKEFLAGS: -j4
PKG_CONFIG_PATH: /usr/local/Cellar/readline/6.1/lib/pkgconfig
==> Downloading http://ftp9.us.postgresql.org/pub/mirrors/postgresql/source/v9.0.0/postgresql-9.0.0.tar.bz2
File already downloaded and cached to /Users/bjdidip/Library/Caches/Homebrew
/usr/bin/tar xf /Users/bjdidip/Library/Caches/Homebrew/postgresql-9.0.0.tar.bz2
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/fileutils.rb:243: command not found: uuid-config --cflags
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/fileutils.rb:243: command not found: uuid-config --ldflags
/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/fileutils.rb:243: command not found: uuid-config --libs
==> ./configure --disable-debug --prefix=/usr/local/Cellar/postgresql/9.0.0 --enable-thread-safety --with-bonjour --with-gssapi --with-krb5 --with-openssl --with-libxml --with-libxslt --with-python --with-perl --with-ossp-uuid ARCHFLAGS='-arch x86_64'
./configure --disable-debug --prefix=/usr/local/Cellar/postgresql/9.0.0 --enable-thread-safety --with-bonjour --with-gssapi --with-krb5 --with-openssl --with-libxml --with-libxslt --with-python --with-perl --with-ossp-uuid ARCHFLAGS='-arch x86_64'
checking build system type... x86_64-apple-darwin10.3.3
checking host system type... x86_64-apple-darwin10.3.3
checking which template to use... darwin
checking whether to build with 64-bit integer date/time support... yes
checking whether NLS is wanted... no
checking for default port number... 5432
checking for block size... 8kB
checking for segment size... 1GB
checking for WAL block size... 8kB
checking for WAL segment size... 16MB
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether /usr/bin/cc accepts -g... yes
checking for /usr/bin/cc option to accept ISO C89... none needed
checking if /usr/bin/cc supports -Wdeclaration-after-statement... yes
checking if /usr/bin/cc supports -Wendif-labels... yes
checking if /usr/bin/cc supports -fno-strict-aliasing... yes
checking if /usr/bin/cc supports -fwrapv... yes
checking whether the C compiler still works... yes
checking how to run the C preprocessor... /usr/bin/cc -E
checking allow thread-safe client libraries... yes
checking whether to build with Tcl... no
checking whether to build Perl modules... yes
checking whether to build Python modules... yes
checking whether to build with GSSAPI support... yes
checking whether to build with Kerberos 5 support... yes
checking whether to build with PAM support... no
checking whether to build with LDAP support... no
checking whether to build with Bonjour support... yes
checking whether to build with OpenSSL support... yes
checking for xml2-config... xml2-config
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ld used by GCC... /usr/bin/cc
checking if the linker (/usr/bin/cc) is GNU ld... no
checking for ranlib... ranlib
checking for strip... strip
checking whether it is possible to strip libraries... no
checking for ar... ar
checking for tar... /usr/bin/tar
checking whether ln -s works... yes
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking for a thread-safe mkdir -p... config/install-sh -c -d
checking for bison... /usr/bin/bison
configure: using bison (GNU Bison) 2.3
checking for flex... /usr/bin/flex
configure: using flex 2.5.35
checking for perl... /usr/bin/perl
configure: using perl 5.10.0
checking for Perl archlibexp... /System/Library/Perl/5.10.0/darwin-thread-multi-2level
checking for Perl privlibexp... /System/Library/Perl/5.10.0
checking for Perl useshrplib... true
checking for flags to link embedded Perl...  '-arch x86_64' -L/usr/local/lib  -L/System/Library/Perl/5.10.0/darwin-thread-multi-2level/CORE -lperl -ldl -lm -lutil -lc
checking for python... /usr/bin/python
checking for Python distutils module... yes
checking Python configuration directory... /System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/config
checking how to link an embedded Python application... -L/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/config -lpython2.6 -ldl
checking whether Python is compiled with thread support... yes
checking for main in -lm... yes
checking for library containing setproctitle... no
checking for library containing dlopen... none required
checking for library containing socket... none required
checking for library containing shl_load... no
checking for library containing getopt_long... none required
checking for library containing crypt... none required
checking for library containing fdatasync... none required
checking for library containing gethostbyname_r... no
checking for library containing shmget... none required
checking for -lreadline... yes (-lreadline)
checking for inflate in -lz... yes
checking for library containing gss_init_sec_context... -lgssapi_krb5
checking for library containing com_err... none required
checking for library containing krb5_sendauth... none required
checking for CRYPTO_new_ex_data in -lcrypto... yes
checking for SSL_library_init in -lssl... yes
checking for xmlSaveToBuffer in -lxml2... yes
checking for xsltCleanupGlobals in -lxslt... yes
checking for uuid_export in -lossp-uuid... no
checking for uuid_export in -luuid... no
configure: error: library 'ossp-uuid' or 'uuid' is required for OSSP-UUID
Exit status: 1

http://github.com/mxcl/homebrew/blob/master/Library/Formula/postgresql.rb#L50

==> Environment
HOMEBREW_VERSION: 0.7
HEAD: b7a2d2371e5594be6390f4fe2c8cf6dfd90fc47e
HOMEBREW_PREFIX: /usr/local
HOMEBREW_CELLAR: /usr/local/Cellar
HOMEBREW_REPOSITORY: /usr/local
HOMEBREW_LIBRARY_PATH: /usr/local/Library/Homebrew
Hardware: quad-core 64-bit arrandale
OS X: 10.6.3
Kernel Architecture: i386
Ruby: 1.8.7-173
/usr/bin/ruby => /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby
GCC-4.0: build 5494 
GCC-4.2: build 5664 
LLVM: build 2326 
MacPorts or Fink? false
X11 installed? true

==> Build Flags
CC: /usr/bin/cc => /usr/bin/gcc-4.2
CXX: /usr/bin/c++ => /usr/bin/c++-4.2
LD: /usr/bin/cc => /usr/bin/gcc-4.2
CFLAGS: -O3 -w -pipe  -I/usr/include/libxml2 
CXXFLAGS: -O3 -w -pipe  -I/usr/include/libxml2
CPPFLAGS: -I/usr/local/Cellar/readline/6.1/include
LDFLAGS: -L/usr/local/Cellar/readline/6.1/lib 
MAKEFLAGS: -j4
PKG_CONFIG_PATH: /usr/local/Cellar/readline/6.1/lib/pkgconfig
Error: Failure while executing: ./configure --disable-debug --prefix=/usr/local/Cellar/postgresql/9.0.0 --enable-thread-safety --with-bonjour --with-gssapi --with-krb5 --with-openssl --with-libxml --with-libxslt --with-python --with-perl --with-ossp-uuid 'ARCHFLAGS=-arch x86_64'-arch x86_64'
Please report this bug at http://github.com/mxcl/homebrew/issues
These existing issues may help you:
http://github.com/mxcl/homebrew/issues/#issue/2510
It looks like an autotools configure failed.
Consider re-running the install with '-vd' to keep 'config.log' around:
    brew install -vd postgresql
Gist 'config.log' and any error output when reporting an issue.
Remember to include your config information: brew --config

Also try:
  `brew doctor` to check your setup for common problems.
  `brew missing` to check installed packages for missing deps.
